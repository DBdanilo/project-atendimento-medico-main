
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


model Paciente {
  id             String     @id @default(uuid())
  nome           String
  cpf            String    @unique
  dataNascimento DateTime
  sexo           String
  endereco       String
  telefone       String
  prioridade     String
  triagens       Triagem[]
  atendimentos   Atendimento[]
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  listaEsperaTriagem Boolean @default(false)
  historicos HistoricoAtendimento[]
}

model Funcionario {
  id        String   @id @default(uuid())
  nome      String
  cpf       String   @unique
  perfil    Perfil
  senha     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  triagens  Triagem[] @relation("FuncionarioTriagens")
  atendimentos Atendimento[]
  historicos HistoricoAtendimento[]
}

model Triagem {
  id           String     @id @default(uuid())
  paciente     Paciente   @relation(fields: [pacienteId], references: [id], onDelete: Cascade)
  pacienteId   String
  funcionario  Funcionario? @relation("FuncionarioTriagens", fields: [funcionarioId], references: [id])
  funcionarioId String?
  temperatura  Float
  pressao      String
  peso         Float
  altura       Float
  observacao   String?
  prioridade   String
  createdAt    DateTime   @default(now())
  historicos HistoricoAtendimento[]
}

model Atendimento {
  id           String     @id @default(uuid())
  paciente     Paciente   @relation(fields: [pacienteId], references: [id], onDelete: Cascade)
  pacienteId   String
  funcionario  Funcionario @relation(fields: [funcionarioId], references: [id])
  funcionarioId String
  motivo       String
  diagnostico  String
  prescricao   String
  observacao   String?
  prioridade   String
  createdAt    DateTime   @default(now())
  historicos HistoricoAtendimento[]
}


model HistoricoAtendimento {
  id                      String      @id @default(uuid())
  paciente                Paciente    @relation(fields: [pacienteId], references: [id], onDelete: Cascade)
  pacienteId              String
  triagem                 Triagem?    @relation(fields: [triagemId], references: [id])
  triagemId               String?
  atendimento             Atendimento? @relation(fields: [atendimentoId], references: [id])
  atendimentoId           String?
  funcionario             Funcionario? @relation(fields: [funcionarioId], references: [id])
  funcionarioId           String?
  // Dados da triagem
  temperatura             Float?
  pressao                 String?
  peso                    Float?
  altura                  Float?
  observacaoTriagem       String?
  prioridadeTriagem       String?
  // Dados do atendimento
  motivo                  String?
  diagnostico             String?
  prescricao              String?
  observacaoAtendimento   String?
  prioridadeAtendimento   String?
  // Controle
  descricao               String?
  dataEvento              DateTime    @default(now())
  createdAt               DateTime    @default(now())
}

enum Perfil {
  ATENDENTE
  MEDICO
  TECNICO_ENFERMAGEM
  GESTOR
}


